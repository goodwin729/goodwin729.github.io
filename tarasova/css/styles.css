@charset "UTF-8";*,:after,:before,body,html{font-family:Montserrat-Regular,Arial,serif;box-sizing:border-box}.info,body,html{position:relative}.banner__body:before,.clearfix:after,.clients__title:before{content:""}.table,td,th{border-collapse:collapse}@font-face{font-family:Montserrat-Regular;src:url(../fonts/montserrat-regular.eot);src:url(../fonts/montserrat-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/montserrat-regular.woff) format("woff"),url(../fonts/montserrat-regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Montserrat-Medium;src:url(../fonts/lato-regular.eot);src:url(../fonts/montserrat-medium.eot?#iefix) format("embedded-opentype"),url(../fonts/montserrat-medium.woff) format("woff"),url(../fonts/montserrat-medium.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Anrarctic-Regular;src:url(../fonts/antarctic-regular.eot);src:url(../fonts/antarctic-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/antarctic-regular.woff) format("woff"),url(../fonts/antarctic-regular.ttf) format("truetype");font-weight:400;font-style:normal}.tabs-nav__link:after,.transition{transition:all .3s}.modal,.transition_6{transition:all .6s}.modal__header_close:before,.rotate-45-l{transform:rotate(-45deg)}.modal__header_close:after,.rotate-45-r{transform:rotate(45deg)}.rotate-180{transform:rotate(180deg)}.fade-in-1s{animation:fadein 1s}.fade-in-06s{animation:fadein .6s}.fade-in-03s,.meeting__popover{animation:fadein .3s}@keyframes fadein{from{opacity:0}to{opacity:1}}.is-left{float:left}.is-right{float:right}.text-left{text-align:left}.text-center{text-align:center}.banner__logo,.text-right{text-align:right}body,html{background-color:#F2F2F2;height:100%}b,mark,strong{font-family:Montserrat-Medium,Arial,serif}b,strong{color:#333;font-weight:400}.clearfix:after{display:table;width:100%}a,a:active,a:focus,a:hover{color:inherit}:focus::-webkit-input-placeholder{color:#666;font-size:15px}:focus::-moz-placeholder{color:#666;font-size:15px}:focus:-moz-placeholder{color:#666;font-size:15px}:focus:-ms-input-placeholder{color:#666;font-size:15px}input[placeholder]{text-overflow:ellipsis}input::-moz-placeholder{text-overflow:ellipsis}input:-moz-placeholder{text-overflow:ellipsis}input:-ms-input-placeholder{text-overflow:ellipsis}::-webkit-input-placeholder{color:#666;font-size:15px}::-moz-placeholder{color:#666;font-size:15px;opacity:1}:-moz-placeholder{color:#666;font-size:15px;opacity:1}:-ms-input-placeholder{color:#666;font-size:15px}.info{color:#bbb}h2,mark{color:#333}body{margin:0;padding:0}body a,body a:focus,body a:hover,body a:visited{text-decoration:none}body button:focus,body button:visited,body input:focus,body textarea:focus{outline:0}@media only screen and (min-width:1200px){.container{padding:0}}@media only screen and (min-width:992px) and (max-width:1199px){.container{max-width:1199px;width:auto}}@media only screen and (min-width:768px) and (max-width:991px){.container{max-width:991px;width:auto}}@media only screen and (max-width:767px){.container{width:auto}}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-weight:400;margin:0}h2{font-size:32px;line-height:40px}mark{background:0 0}.all-width{width:100%}.all-height{height:300px}.overlay{background-color:#333;display:block;height:100vh;left:0;position:fixed;top:0;width:100vw;z-index:200}.banner{background:url(../img/banner_img_01.png) center center no-repeat;background-size:cover;display:-ms-flexbox;display:flex;height:100vh;width:100%}@media only screen and (max-width:1200px){.banner{background-position:70% center;padding-left:24px;padding-right:24px;width:100%}}.banner__wrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;margin:0 auto;position:relative;width:1200px}@media only screen and (max-width:1200px){.banner__wrapper{padding-left:24px;padding-right:24px;width:100%}}.banner__logo{bottom:136px;color:#FFE500;position:absolute;right:0}.banner__logo_name{color:#FFE500;display:block;font-family:Anrarctic-Regular,Arial,serif;font-size:126px;line-height:140px}.banner__logo_surname,.banner__title{color:#FFE500;line-height:40px;font-family:Anrarctic-Regular,Arial,serif}@media only screen and (max-width:767px){.banner{background-position:75% center}.banner__wrapper{-ms-flex-pack:end;justify-content:flex-end;padding-bottom:64px;padding-left:16px;padding-right:16px}.banner__logo{left:0;margin-bottom:32px;position:relative;right:auto;text-align:left;top:0;width:100%}.banner__logo_name{font-size:76px;line-height:40px;margin-bottom:8px;margin-top:32px;text-align:right}}.banner__logo_surname{display:block;font-size:156px;padding-right:80px}.banner__body{max-width:592px;position:relative}.banner__body>*{margin-top:32px;position:relative;z-index:1}@media only screen and (max-width:767px){.banner__logo_surname{font-size:76px;line-height:40px;padding-right:0;padding-left:80px}.banner__body>*{margin-top:8px}}.banner__body>:first-child{margin-top:0}.banner__body:before{background-color:rgba(255,229,0,.45);display:block;height:calc(100% + 160px);left:-48px;position:absolute;top:-96px;width:120px}.banner__title{font-size:126px}@media only screen and (max-width:767px){.banner__title{font-family:Montserrat-Medium,Arial,serif;font-size:20px;line-height:24px;text-align:right}}.banner__subtitle{color:#fff;font-size:66px;line-height:44px;font-family:Anrarctic-Regular,Arial,serif;margin-bottom:80px}@media only screen and (max-width:767px){.banner__subtitle{font-family:Montserrat-Regular,Arial,serif;font-size:16px;line-height:24px;margin-bottom:16px;text-align:right}}.banner__text{color:#fff;font-size:16px;line-height:24px}.banner__text_focus{color:#FFE500}.clients{width:100%}.clients__wrapper{margin:0 auto;padding:200px 0;position:relative;width:1200px}.clients__title{color:#333;display:inline-block;font-family:Anrarctic-Regular,Arial,serif;font-size:136px;line-height:140px;margin-bottom:240px;position:relative}@media only screen and (max-width:1200px){.clients__wrapper{padding-left:24px;padding-right:24px;width:100%}.clients__title{display:block;margin-bottom:320px}}@media only screen and (max-width:767px){.clients__wrapper{padding:120px 16px}.clients__title{font-size:66px;line-height:40px;margin-bottom:80px}}.clients__title:after,.clients__title_text{font-family:Anrarctic-Regular,Arial,serif;font-size:66px;line-height:54px;position:absolute}.clients__title:before{background-color:#fff;border-radius:50%;bottom:0;height:35px;position:absolute;right:-80px;width:66px}@media only screen and (max-width:1200px){.clients__title:before{right:30%}}@media only screen and (max-width:767px){.clients__title:before{background-color:rgba(255,229,0,.45);border-radius:0;display:block;height:calc(100% + 32px);left:-16px;position:absolute;top:-16px;width:64px;z-index:-1}.clients__title:after{display:none}}.clients__title:after{content:"это";background-color:#fff;border-radius:50%;bottom:-56px;height:69px;padding-left:40px;padding-top:8px;right:-204px;width:130px}.clients__title_text{background-color:#fff;border-radius:50%;bottom:-280px;color:#333;display:block;height:228px;left:110%;padding-left:80px;padding-top:24px;width:380px}@media only screen and (max-width:1200px){.clients__title:after{right:20%}.clients__title_text{left:auto;right:5%}}@media only screen and (max-width:767px){.clients__title_text{background-color:transparent;bottom:0;font-family:Montserrat-Regular,Arial,serif;font-size:16px;line-height:24px;height:auto;padding-left:0;position:relative;right:0;text-align:left;width:100%}}.clients__title_text:before{content:"";background:url(/img/clients_decor_01.svg) center center no-repeat;height:130px;position:absolute;right:95%;top:49%;width:574px}@media only screen and (max-width:1200px){.clients__title_text:before{content:"это ";background:0 0;font-family:Montserrat-Regular,Arial,serif;font-size:16px;line-height:24px;height:auto;position:relative;right:auto;top:0;width:auto}.clients__title_text:after{display:none}}.clients__title_text:after{content:"";background:url(/img/clients_decor_02.svg) center center no-repeat;height:1008px;position:absolute;right:-130px;top:80%;width:430px}.clients__title_mark{color:#333;display:block;font-family:Anrarctic-Regular,Arial,serif;font-size:86px;line-height:54px}.clients__item{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;margin-top:96px}.clients__item>*{margin-left:48px}@media only screen and (max-width:767px){.clients__title_mark{font-family:Montserrat-Regular,Arial,serif;font-size:16px;line-height:24px}.clients__item{-ms-flex-direction:column-reverse;flex-direction:column-reverse;margin-top:80px}.clients__item:first-of-type{-ms-flex-direction:column;flex-direction:column}.clients__item>*{margin-left:0}}.clients__item>:first-child{margin-left:0}.clients__item_title{color:#333;display:block;font-family:Anrarctic-Regular,Arial,serif;font-size:86px;line-height:54px;margin-bottom:56px;position:relative;text-align:center}.clients__item_title:before{content:"";border-radius:50%;border:4px solid #fff;height:228px;left:0;position:absolute;top:-48px;width:380px;z-index:-1}.clients__item_rubric:before,.meeting__item_title:before{border-radius:50%;content:""}@media only screen and (max-width:767px){.clients__item_title{font-size:66px;line-height:40px}.clients__item_title:before{display:none}.clients__item_image img{margin-bottom:32px}}.clients__item_image{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.clients__item_image img{width:580px}@media only screen and (max-width:1200px){.clients__item_image img{width:100%}}.clients__item_list{list-style:none;padding:0;width:100%}.clients__item_rubric{color:#777;font-size:16px;line-height:24px;margin-top:32px;padding-left:24px;position:relative}.meeting__item_title,.meeting__title{color:#333;font-family:Anrarctic-Regular,Arial,serif}.clients__item_rubric:first-child{margin-top:0}.clients__item_rubric:before{background-color:#333;height:8px;left:0;position:absolute;top:8px;width:8px}.meeting{width:100%}.meeting__wrapper{margin:0 auto;padding:0 0 200px;position:relative;width:1200px}.meeting__title{display:inline-block;font-size:136px;line-height:140px;position:relative}@media only screen and (max-width:1200px){.meeting__wrapper{padding-bottom:80px;padding-left:24px;padding-right:24px;width:100%}.meeting__title{line-height:80px}}.meeting__title:before{content:"";display:none}@media only screen and (max-width:767px){.meeting__wrapper{padding-left:16px;padding-right:16px}.meeting__title{font-size:66px;line-height:40px}.meeting__title:before{background-color:rgba(255,229,0,.45);display:block;height:calc(100% + 32px);left:-16px;position:absolute;top:-16px;width:64px;z-index:-1}}.meeting__item{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;margin-top:96px}.meeting__item>*{margin-left:48px}.meeting__item>:first-child{margin-left:0}.meeting__item_title{display:block;font-size:86px;line-height:54px;margin-bottom:56px;position:relative;text-align:center}.btn,.footer__links_text,.meeting__item_rubric{font-size:16px;line-height:24px}.meeting__item_title:before{border:4px solid #fff;height:228px;left:0;position:absolute;top:-48px;width:380px;z-index:-1}.meeting__item_image{text-align:center}@media only screen and (max-width:767px){.meeting__item{-ms-flex-direction:column-reverse;flex-direction:column-reverse;margin-top:48px}.meeting__item>*{margin-left:0}.meeting__item_image{margin-top:32px}}.meeting__item_image-picture{margin-bottom:56px;width:580px}@media only screen and (max-width:1200px){.meeting__item_image-picture{width:100%}}.meeting__item_list{list-style:none;padding:0;width:100%}.meeting__item_rubric{color:#777;margin-top:32px;padding-left:24px;position:relative}.meeting__item_rubric:first-child{margin-top:0}.meeting__item_rubric:before{content:"";background-color:#333;border-radius:50%;height:8px;left:0;position:absolute;top:8px;width:8px}.meeting__item_link{border-bottom:2px solid #FFE500;cursor:pointer;position:relative}.meeting__item_link:hover>*{display:-ms-flexbox;display:flex}.meeting__popover{background-color:#fff;border-radius:50%;bottom:calc(100% + 72px);box-shadow:0 44px 40px rgba(51,51,51,.1);cursor:default;display:none;height:526px;-ms-flex-pack:center;justify-content:center;padding-top:120px;position:absolute;right:-48px;width:880px}.btn,.checkbox{color:#333;cursor:pointer}.meeting__popover:after,.meeting__popover:before{content:"";background-color:#fff;display:block;position:absolute;border-radius:50%}.meeting__popover:before{bottom:-50px;box-shadow:0 24px 30px rgba(51,51,51,.2);height:69px;right:178px;width:130px}.meeting__popover:after{bottom:-72px;box-shadow:0 12px 20px rgba(51,51,51,.3);height:36px;right:125px;width:66px}.btn,.footer__links_link{background-color:#FFE500}.meeting__popover_img{-ms-flex-negative:0;flex-shrink:0;overflow:hidden;margin-right:32px;width:156px}.meeting__popover_img img{width:100%}.meeting__popover_text{width:520px}.footer{width:100%}.footer__wrapper{display:-ms-flexbox;display:flex;margin:0 auto;padding:32px 0;position:relative;width:1200px}.footer__links,.footer__links_link{-ms-flex-align:center;display:-ms-flexbox}@media only screen and (max-width:1200px){.footer__wrapper{padding-left:24px;padding-right:24px;width:100%}}.footer__links{align-items:center;display:flex;margin-left:auto}@media only screen and (max-width:767px){.meeting__item_link{border-bottom-color:transparent;pointer-events:none}.footer__wrapper{padding-left:16px;padding-right:16px}.footer__links{margin-left:0;-ms-flex-direction:column;flex-direction:column;width:100%}}.footer__links>*{margin-left:16px}@media only screen and (max-width:767px){.footer__links>*{margin-left:0;margin-top:16px}.footer__links>:first-child{margin-top:0}}.footer__links_text{color:#333;margin-bottom:0;margin-top:0;text-align:right}@media only screen and (max-width:767px){.footer__links_text{text-align:center}}.footer__links_link{align-items:center;border-radius:50%;display:flex;-ms-flex-pack:center;justify-content:center;height:64px;width:64px}.btn__icon,.checkbox{height:32px;position:relative}.footer__links_list{display:-ms-flexbox;display:flex}.footer__links_list>*{margin-left:16px}.footer__links_list>:first-child{margin-left:0}.btn{-ms-flex-align:center;align-items:center;border-color:#FFE500;border-radius:8px;display:-ms-inline-flexbox;display:inline-flex;padding:16px 32px;text-align:center;white-space:nowrap}.btn-contour{background-color:transparent;color:#FFE500}.btn__icon{margin-left:-16px;margin-right:16px;width:32px}.checkbox{display:inline-block;font-size:15px;font-weight:600;line-height:32px;padding:0 24px 0 48px}.checkbox:after,.checkbox:before{box-sizing:border-box;height:32px;left:0;position:absolute;top:0;width:32px;content:""}.checkbox:before{background-color:#fff;border:2px solid #FFE500;border-radius:3px}.checkbox:after{background:url(../../img/ico-check.png) no-repeat}.checkbox.is-active:before{background-color:#FFE500}.checkbox.is-active:after{opacity:1}.checkbox.no-label{font-size:0;padding-left:0}.modal__header_date,.modal__header_operator,.modal__header_status{font-size:16px;font-weight:400;line-height:24px}.checkbox input{display:none}.modal{background-color:#fff;box-shadow:0 4px 16px rgba(51,51,51,.25);display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:calc(100% - 64px);position:fixed;right:-100%;top:64px;width:calc((100% / 3) * 2);z-index:50}.modal.is-active{right:0}.modal__header{padding:24px}.modal__header_close{-ms-flex-align:center;align-items:center;border:2px solid #FFE500;border-radius:50%;display:-ms-flexbox;display:flex;height:48px;-ms-flex-pack:center;justify-content:center;position:absolute;top:16px;right:24px;width:48px}.modal__header_close:after,.modal__header_close:before{content:"";background-color:#FFE500;display:block;height:2px;left:calc(50% - 8px);position:absolute;width:16px}.modal__body,.tabs{height:100%;overflow:auto}.modal__header_info{display:-ms-flexbox;display:flex}.modal__header_info>*{margin-left:16px}.modal__header_info>:first-child{margin-left:0}.modal__header_date,.modal__header_operator{color:#777}.modal__header_status.is-valid{color:#3F9726}.modal__header_status.is-rejected{color:#D70C17}.modal__body{-ms-flex:1;flex:1;padding:0 24px}.modal__footer{border-top:1px solid #ddd;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;padding:16px 24px}.tabs,.tabs-nav{display:-ms-flexbox}.table__text,.table__title{font-size:16px;padding:8px 16px;text-align:left;line-height:24px}.modal__footer>*{margin-left:16px}.modal__footer>:first-child{margin-left:0}.table{width:100%}.table__row:nth-child(even){background-color:rgba(221,221,221,.3)}.table__title{font-weight:600}.table__text{font-weight:400}.tabs-nav__link,.upload__title{font-size:16px;font-weight:600}.tabs{display:flex;-ms-flex-direction:column;flex-direction:column}.tabs-nav{display:flex;list-style:none;margin:0;padding:0;position:relative}.tabs-nav>*{margin-left:32px}.tabs-nav>:first-child{margin-left:0}.tabs-nav:after{content:"";background-color:#ddd;bottom:0;height:1px;left:0;position:absolute;width:100%}.tabs-nav__item{padding:24px 0;position:relative}.tabs-nav__link{color:#FFE500;line-height:24px}.tabs-nav__link:after{content:"";background-color:transparent;bottom:0;height:2px;left:0;position:absolute;width:0;z-index:1}.upload,.upload__btn{position:relative}.tabs-nav__link:hover{color:#FFE500}.tabs-nav__link:hover:after{background-color:#FFE500;width:100%}.is-active .tabs-nav__link{color:#333;cursor:default}.is-active .tabs-nav__link:after{background-color:#FFE500;width:100%}.tabs-content{-ms-flex:1;flex:1;height:100%;overflow:auto;padding:32px 0}.text-field{background-color:transparent;border-bottom:2px solid #FFE500;display:-ms-flexbox;display:flex;height:56px;padding-left:8px;width:100%}.text-field__input{background-color:inherit;border-color:transparent;color:#333;-ms-flex:1;flex:1;font-size:15px;line-height:20px;width:100%}.upload>*{margin-top:16px}.upload>:first-child{margin-top:0}.upload.is-rejected{margin-top:40px}.upload__title{color:#333;display:block;line-height:24px}.upload__info_text,.upload__info_time{font-size:16px;font-weight:400;line-height:24px}.is-rejected .upload__title{color:#D70C17}.upload__info_time{color:#777;margin-right:16px}.upload__info_text{color:#333}.upload__btn input{cursor:pointer;height:100%;left:0;opacity:0;position:absolute;top:0;width:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
